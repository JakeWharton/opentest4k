apply plugin: 'maven-publish'
apply plugin: 'signing'

ext {
    pomFile = file("${project.buildDir}/generated-pom.xml")
    isReleaseVersion = !(project.version =~ /-SNAPSHOT$/)
}

task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    duplicatesStrategy = 'exclude'
    from(kotlin.sourceSets.commonMain.kotlin)
    from(kotlin.sourceSets.jsMain.kotlin)
    from(kotlin.sourceSets.jvmMain.kotlin)
}

task emptyJar(type: Jar) {
    archiveClassifier.set('javadoc')
}

artifacts {
    archives sourcesJar
    archives emptyJar
}

signing {
    required { signatory != null && project.ext.isReleaseVersion }
    sign configurations.archives
}

publishing {
    repositories {
        maven {
            if (project.ext.isReleaseVersion) {
                url 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
            } else {
                url 'https://oss.sonatype.org/content/repositories/snapshots/'
            }

            credentials {
                username = project.findProperty('sonatype.username')
                password = project.findProperty('sonatype.password')
            }
        }
    }

    publications {
        lib(MavenPublication) {
            from components.kotlin

            artifact sourcesJar
            artifact emptyJar

            def siteUrl = 'https://github.com/willowtreeapps/opentest4k'
            def gitUrl = 'https://github.com/willowtreeapps/opentest4k.git'

            pom {
                name = project.name
                description = 'multiplatform implementation/bindings of opentest4j'
                url = siteUrl

                scm {
                    url = siteUrl
                    connection = gitUrl
                    developerConnection = gitUrl
                }

                licenses {
                    license {
                        name = 'The Apache Software License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution = 'repo'
                    }
                }

                developers {
                    developer {
                        id = 'evant'
                        name = 'Evan Tatarka'
                    }
                }
            }
        }
    }
}
